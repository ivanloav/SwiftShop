name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy files via SCP
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "/home/ubuntu/SwiftShop"

      - name: Create .env file on EC2
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Crear el archivo .env con los secretos de GitHub
            echo "DB_HOST=${{ secrets.DB_HOST }}" > /home/ubuntu/SwiftShop/backend/.env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> /home/ubuntu/SwiftShop/backend/.env
            echo "DB_USER=${{ secrets.DB_USER }}" >> /home/ubuntu/SwiftShop/backend/.env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> /home/ubuntu/SwiftShop/backend/.env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> /home/ubuntu/SwiftShop/backend/.env
            echo "PORT=${{ secrets.PORT }}" >> /home/ubuntu/SwiftShop/backend/.env
            # Verificar que el archivo .env se ha creado correctamente
            cat /home/ubuntu/SwiftShop/backend/.env

      - name: Execute commands via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navegar al directorio del proyecto en EC2
            cd /home/ubuntu/SwiftShop
            # Actualizar el repositorio desde GitHub
            git pull origin main
            # Backend deployment
            cd backend
            npm install --no-audit
            pm2 restart backend
            # Frontend deployment
            cd ../frontend
            # Asegurarse de que el usuario tenga permisos de escritura en la carpeta dist
            sudo chown -R $USER:$USER /home/ubuntu/SwiftShop/frontend/dist
            sudo chmod -R 755 /home/ubuntu/SwiftShop/frontend/dist
            # Instalar dependencias y compilar el frontend
            npm install --no-audit
            npm run build
            # Copiar los archivos compilados a la carpeta que Nginx utiliza para servir el frontend
            sudo cp -r /home/ubuntu/SwiftShop/frontend/dist/* /var/www/html/
            # Verificar la configuraci√≥n de Nginx
            sudo nginx -t
            # Reiniciar Nginx
            sudo systemctl restart nginx
