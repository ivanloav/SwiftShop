name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Backend Node.js modules
        uses: actions/cache@v2
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-node-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-node-

      - name: Cache Frontend Node.js modules
        uses: actions/cache@v2
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-node-

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm ci --no-audit

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci --no-audit

      - name: Copy files via SCP
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "/home/ubuntu/SwiftShop"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navega al directorio de tu proyecto en EC2
            cd /home/ubuntu/SwiftShop

            # Backend deployment
            cd backend
            npm install --no-audit
            pm2 restart backend

            # Frontend deployment
            cd ../frontend
            npm install --no-audit
            npm run build

            # Copia los archivos compilados del frontend a Nginx
            sudo cp -r dist/* /var/www/html/
            sudo systemctl restart nginx
